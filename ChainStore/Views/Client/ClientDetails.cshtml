@model ClientDetailsViewModel
@inject ICategoryRepository CategoryRepository
@{
    ViewBag.Title = "Client Details";
}

<div class="flex-row d-flex justify-content-between m-3">
    <h4>Name: @Model.ClientName</h4>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ChangeNameForm" style="width: auto">Change Name</button>
    <div class="modal fade" id="ChangeNameForm" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel1" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel1">Change Name</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="ChangeName" asp-controller="Client">
                        <div class="form-group">
                            <input type="hidden" asp-for="@Model.ClientId" value="@Model.ClientId" />
                            <label asp-for="@Model.ClientName" class="col-form-label">New Name:</label>
                            <input asp-for="@Model.ClientName" class="form-control" placeholder="New name...">
                            <span asp-validation-for="@Model.ClientName" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />
<br />
<div class="flex-row d-flex justify-content-between m-3">
    <h4>Balance: @Model.ClientBalance UAH</h4>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ReplenishBalanceForm" style="width: auto">Replenish Balance</button>
    <div class="modal fade" id="ReplenishBalanceForm" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel2" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel2">Replenish Balance</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="ReplenishBalance" asp-controller="Client">
                        <div class="form-group">
                            <input type="hidden" asp-for="@Model.ClientId" value="@Model.ClientId" />
                            <label asp-for="@Model.ClientBalance" class="col-form-label">Replenish Balance:</label>
                            <input type="number" asp-for="@Model.ClientBalance" value="0" max="100000" min="0" class="form-control" placeholder="Sum...">
                            <span asp-validation-for="@Model.ClientBalance" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary" style="width: auto">Replenish</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />
<br />

@if (Model.CashBackPercent != 0)
{
    <h4>CashBack: @Model.CashBack UAH</h4>
    <hr />
    <br />
    <h4>CashBack Percent: @Model.CashBackPercent %</h4>
    <hr />
    <br />
    if (Model.DiscountPercent != 0)
    {
        <h4>Discount Percent: @Model.DiscountPercent %</h4>
        <hr />
        <br />
        <h4>Points: @Model.Points</h4>
        <hr />
        <br />
    }
}
<h4>My Reserves: </h4>
@if (Model.ClientBookDetailedInfoList.Count() != 0)
{
    <div class="row justify-content-start m-3">
        @foreach (var book in Model.ClientBookDetailedInfoList)
        {
            <div class="col-lg-4 col-md-6 col-sm-12 mt-3">
                <div class="card text-center">
                    <h5 class="card-header">@book.Product.Name</h5>
                    @{
                        var category = CategoryRepository.GetOne(book.Product.CategoryId);
                    }
                    <h6 class="card-title mb-2 mt-2 text-muted">@category.CategoryName</h6>
                    <div class="card-body">
                        <p class="card-text">
                            Price: @book.Product.PriceInUAH UAH
                        </p>
                        <p class="card-text">
                            Made: @book.BookCreationTime.DateTime.ToLocalTime()
                        </p>
                        <p class="card-text">
                            Expiration: @book.BookExpirationTime.DateTime.ToLocalTime()
                        </p>
                        @{ var daysLeft = book.BookExpirationTime - DateTimeOffset.Now; }
                        <p class="card-text">
                            Days Left: @daysLeft.Days
                        </p>
                    </div>
                    <div class="card-footer text-center">
                        <a asp-action="PurchaseOperation" asp-controller="Purchase" asp-route-id="@book.Product.ProductId" class="col-6 btn btn-primary">Buy</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <h5>No reserves yet</h5>
}
<hr />
<br />
<h4>Purchase History: </h4>
@if (Model.ClientPurchaseDetailedInfoList.Count() != 0)
{
    <div class="row justify-content-start m-3">
        @foreach (var purchase in Model.ClientPurchaseDetailedInfoList)
        {
            <div class="col-lg-4 col-md-6 col-sm-12 mt-3">
                <div class="card text-center">
                    <h5 class="card-header">@purchase.Product.Name</h5>
                    @{
                        var category = CategoryRepository.GetOne(purchase.Product.CategoryId);
                    }
                    <h6 class="card-title mb-2 mt-2 text-muted">@category.CategoryName</h6>
                    <div class="card-body">
                        <p class="card-text">
                            Price: @purchase.Product.PriceInUAH UAH
                        </p>
                        <p class="card-text">
                            Made: @purchase.PurchaseCreationTime.DateTime.ToLocalTime()
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <h5>No purchases yet</h5>
}